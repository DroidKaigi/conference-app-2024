[versions]
androidGradlePlugin = "8.5.2"
# For updating Kotlin and Compose Compiler version, see:
# https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html#jetpack-compose-and-compose-multiplatform-release-cycles
# https://developer.android.com/jetpack/androidx/releases/compose-kotlin?#pre-release_kotlin_compatibility
kotlin = "2.0.10"

androidxCore = "1.13.1"
androidDesugarJdkLibs = "2.0.4"
compose = "2024.06.00"
# Confirm that the Compose for Desktop app is available to launch when update this version number.
# https://youtrack.jetbrains.com/issue/CMP-5077/Compose-navigation-crash-v2.8.0-alpha08-UnsatisfiedLinkError
composeMultiplatform = "1.7.0-alpha02"
rin = "0.1.0"
composeInvestigator = "1.5.10-0.2.1"
composeMaterial3 = "1.2.1"
composeHiltNavigation= "1.2.0"
androidxLifecycle = "2.8.4"
androidxActivity = "1.9.1"
androidxFragment = "1.8.2"
androidxSplashScreen = "1.0.1"
kotlinxCoroutines = "1.8.1"
accompanist = "0.30.1"
junit = "4.13.2"
androidxTestExt = "1.2.1"
androidxTestEspresso = "3.6.1"
dagger = "2.51.1"
koin = "3.4.3"
ktlint = "0.49.1"
kotlinxSerialization = "1.7.1"
ktor = "2.3.10"
roborazzi = "1.26.0"
ksp = "2.0.10-1.0.24"
firebaseBom = "33.1.2"
multiplatformFirebase = "1.8.1"
kermit = "1.2.2"
okHttp = "4.12.0"
ktorfit = "1.12.0"
ossLicensesPlugin = "0.10.6"
ossLicenses = "17.1.0"
haze = "0.7.2"
detekt = "1.23.6"
twitterComposeRule = "0.0.26"
lottie = "6.1.0"
molecule = "1.4.2"
kover = "0.7.6"
androidxLifecycleProcess = "2.8.4"
skie = "0.8.4"
composablePreviewScanner = "0.1.3"
coil = "3.0.0-alpha10"
peekaboo = "0.5.2"

[libraries]
androidGradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
composeJbGradlePlugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "composeMultiplatform" }
composeCompilerGradlePlugin = { group = "org.jetbrains.kotlin", name = "compose-compiler-gradle-plugin", version.ref = "kotlin" }
hiltGradlePlugin = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "dagger" }
roborazziGradlePlugin = { group = "io.github.takahirom.roborazzi", name = "roborazzi-gradle-plugin", version.ref = "roborazzi" }
kspGradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
firebaseGradlePlugin = { module = "com.google.gms:google-services", version = "4.4.2" }
ktorfitGradlePlugin = { module = "de.jensklingenberg.ktorfit:gradle-plugin", version = "1.0.0" }
kotlinxSerializationGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
completeKotlinPlugin = { module = "com.louiscad.complete-kotlin:plugin", version = "1.1.0" }
detektGradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
detektFormatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
twitterComposeRule = { module = "com.twitter.compose.rules:detekt", version.ref = "twitterComposeRule" }
ossLicensesPlugin = { group = "com.google.android.gms", name = "oss-licenses-plugin", version.ref = "ossLicensesPlugin" }
moleculeGradlePlugin = { module = "app.cash.molecule:molecule-gradle-plugin", version.ref = "molecule" }
moleculeRuntime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
koverPlugin = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
composeInvestigatorGradlePlugin = { module = "land.sungbin.composeinvestigator:land.sungbin.composeinvestigator.gradle.plugin", version.ref = "composeInvestigator" }
skiePlugin = { module = "co.touchlab.skie:co.touchlab.skie.gradle.plugin", version.ref = "skie" }

androidDesugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }

# Core

daggerHiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
daggerHiltAndroidTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "dagger" }
daggerHiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }
androidxLifecycleProcess = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "androidxLifecycleProcess" }

# for iOS
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
skieAnnotation = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }

kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kotlinxCollectionsImmutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.0" }
kotlinxAtomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.23.2" }

# for Desktop
kotlinxCoroutinesSwing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }

# UI

composeBom = { module = "androidx.compose:compose-bom", version.ref = "compose" }
composeRuntime = { module = "androidx.compose.runtime:runtime" }
composeUi = { module = "androidx.compose.ui:ui" }
composeUiUtil = { module = "androidx.compose.ui:ui-util" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeAnimation = { module = "androidx.compose.animation:animation" }
composeAnimationGraphics = { module = "androidx.compose.animation:animation-graphics" }
composeMaterial = { module = "androidx.compose.material:material" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
composeMaterialWindowSize = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.5.0"
composeMaterialIcon = { module = "androidx.compose.material:material-icons-extended" }
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }
composeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
composeNavigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.8.0-alpha08" }
coreBundle = { module = "org.jetbrains.androidx.core:core-bundle", version = "1.0.0" }
composeHiltNavigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeHiltNavigation" }
composeLintCheck = { module = "com.slack.lint.compose:compose-lint-checks", version = "1.3.1" }
coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coilNetwork = { module = "io.coil-kt.coil3:coil-network-ktor2", version.ref = "coil"  }
coilTest = { module = "io.coil-kt.coil3:coil-test", version.ref = "coil" }
composeShimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version = "1.0.5" }
rin = { module = "io.github.takahirom.rin:rin", version.ref = "rin" }
lottieCompose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
animation-graphics-android = { group = "androidx.compose.animation", name = "animation-graphics-android", version = "1.6.8" }
haze = { group = "dev.chrisbanes.haze", name = "haze", version.ref = "haze" }
peekabooImagePicker = { group = "io.github.onseok", name = "peekaboo-image-picker", version.ref = "peekaboo" }

androidxFragment = { module = "androidx.fragment:fragment", version.ref = "androidxFragment" }
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidxAppCompat = { module = "androidx.appcompat:appcompat", version = "1.7.0" }
androidxLifecycleLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidxLifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidxLifecycle" }
androidxLifecycleViewModelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.8.0" }
androidxLifecycleCommon = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidxLifecycle" }
androidxActivityActivityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidxDatastoreDatastorePreferences = { module = "androidx.datastore:datastore-preferences-core", version = "1.1.1" }
androidxBrowser = { module = "androidx.browser:browser", version = "1.8.0" }
androidxWindow = { module = "androidx.window:window", version = "1.3.0" }
androidxSplashScreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxSplashScreen" }
javaPoet = { module = "com.squareup:javapoet", version = "1.13.0" }

# Data

kotlinSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

ktorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorClientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktorKotlinxSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

okHttpCore = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
okIo = { module = "com.squareup.okio:okio", version = "3.9.0" }
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebaseCommon = { module = "com.google.firebase:firebase-common" }
firebaseAuth = { module = "com.google.firebase:firebase-auth" }
firebaseDynamicLinks = { module = "com.google.firebase:firebase-dynamic-links" }
multiplatformFirebaseAuth = { module = "dev.gitlive:firebase-auth", version.ref = "multiplatformFirebase" }
firebaseRemoteConfig = { module = "dev.gitlive:firebase-config", version.ref = "multiplatformFirebase" }
firebaseCrashlyticsGradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version = "3.0.2" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version = "19.0.3" }

ktorfitLib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfitKsp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }

# Debug

# Test

ossLicenses = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "ossLicenses" }

junit = { module = "junit:junit", version.ref = "junit" }
androidxTestExtJunit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidxTestEspressoEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxTestEspresso" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
robolectric = { module = "org.robolectric:robolectric", version = "4.13" }
roborazzi = { module = "io.github.takahirom.roborazzi:roborazzi", version.ref = "roborazzi" }
roborazziCompose = { module = "io.github.takahirom.roborazzi:roborazzi-compose", version.ref = "roborazzi" }
roborazziIos = { module = "io.github.takahirom.roborazzi:roborazzi-compose-ios", version.ref = "roborazzi" }
roborazziRule = { module = "io.github.takahirom.roborazzi:roborazzi-junit-rule", version.ref = "roborazzi" }
roborazziPreviewScannerSupport = { module = "io.github.takahirom.roborazzi:roborazzi-compose-preview-scanner-support", version.ref = "roborazzi" }
composablePreviewScanner = { module = "com.github.sergio-sastre.ComposablePreviewScanner:android", version.ref = "composablePreviewScanner" }
composablePreviewScannerJvm = { module = "com.github.sergio-sastre.ComposablePreviewScanner:jvm", version.ref = "composablePreviewScanner" }

[plugins]
androidGradlePlugin = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidGradleLibraryPlugin = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlinGradlePlugin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hiltGradlePlugin = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }
roborazziGradlePlugin = { id = "io.github.takahirom.roborazzi", version.ref = "roborazzi" }
kspGradlePlugin = { id = "com.google.devtools.ksp", version.ref = "ksp" }
moleculeGradlePlugin = { id = "app.cash.molecule", version.ref = "molecule" }
composeInvestigatorGradlePlugin = { id = "land.sungbin.composeinvestigator:compiler-gradle-plugin", version.ref = "composeInvestigator" }
kotlinxKover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
detektGradlePlugin = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ossLicensesPlugin = { id = "com.google.android.gms.oss-licenses-plugin", version.ref = "ossLicensesPlugin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }

[bundles]
plugins = [
    "androidGradlePlugin",
    "kotlinGradlePlugin",
    "composeCompilerGradlePlugin",
    "hiltGradlePlugin",
    "composeJbGradlePlugin",
    "roborazziGradlePlugin",
    "kspGradlePlugin",
    "firebaseGradlePlugin",
    "ktorfitGradlePlugin",
    "skiePlugin",
    "kotlinxSerializationGradlePlugin",
    "completeKotlinPlugin",
    "detektGradlePlugin",
    "ossLicensesPlugin",
    "moleculeGradlePlugin",
#    "composeInvestigatorGradlePlugin",
    "koverPlugin",
    "firebaseCrashlyticsGradlePlugin"
]
